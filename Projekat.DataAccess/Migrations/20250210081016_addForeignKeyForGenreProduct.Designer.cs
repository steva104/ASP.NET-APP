// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VinylVibe.DataAccess.Data;

#nullable disable

namespace VinylVibe.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250210081016_addForeignKeyForGenreProduct")]
    partial class addForeignKeyForGenreProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VinylVibe.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Hip Hop"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Country"
                        });
                });

            modelBuilder.Entity("VinylVibe.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price10")
                        .HasColumnType("float");

                    b.Property<double>("Price5")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artist = "Michael Jackson",
                            Description = "Best-selling album of all time by Michael Jackson",
                            GenreId = 9,
                            ListPrice = 29.0,
                            Price = 25.0,
                            Price10 = 19.0,
                            Price5 = 22.0,
                            Title = "Thriller",
                            UPC = "123456789012",
                            Year = 1982
                        },
                        new
                        {
                            Id = 2,
                            Artist = "AC/DC",
                            Description = "Legendary rock album by AC/DC",
                            GenreId = 5,
                            ListPrice = 24.0,
                            Price = 21.0,
                            Price10 = 15.0,
                            Price5 = 18.0,
                            Title = "Back in Black",
                            UPC = "987654321098",
                            Year = 1980
                        },
                        new
                        {
                            Id = 3,
                            Artist = "Pink Floyd",
                            Description = "Iconic progressive rock album by Pink Floyd",
                            GenreId = 1,
                            ListPrice = 27.0,
                            Price = 24.0,
                            Price10 = 18.0,
                            Price5 = 21.0,
                            Title = "The Dark Side of the Moon",
                            UPC = "112233445566",
                            Year = 1973
                        },
                        new
                        {
                            Id = 4,
                            Artist = "The Beatles",
                            Description = "Classic rock album by The Beatles",
                            GenreId = 1,
                            ListPrice = 26.0,
                            Price = 23.0,
                            Price10 = 17.0,
                            Price5 = 20.0,
                            Title = "Abbey Road",
                            UPC = "223344556677",
                            Year = 1969
                        },
                        new
                        {
                            Id = 5,
                            Artist = "Nirvana",
                            Description = "Grunge-defining album by Nirvana",
                            GenreId = 1,
                            ListPrice = 22.0,
                            Price = 19.0,
                            Price10 = 14.0,
                            Price5 = 16.0,
                            Title = "Nevermind",
                            UPC = "334455667788",
                            Year = 1991
                        });
                });

            modelBuilder.Entity("VinylVibe.Models.Product", b =>
                {
                    b.HasOne("VinylVibe.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
